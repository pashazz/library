* Library

This project is intended to show Keycloak-based Spring Security configuration with ACLs.

The datasources for permissions and for books are different.

* DB setup
[[./src/main/resources/application.properties][application.properties]] contains PostgreSQL setup that you might want to edit.

* Keycloak setup
We assume that keycloak is at localhost:8180

Import [[./realm-demo.json][realm-demo.json]]

* How to use


The librarian user can create books and share them:
+ id: 50ed2bca-cac7-480b-997c-5018c9af03fc
+ name: librarian
+ password: lib

"mike" is a library member, he can view shared books
+ id: fc437463-07ba-4cb8-9a1d-bbde8f81d0f6
+ name: mike
+ password: mike

"alice" is also a library member:
+ id: fc437463-07ba-4cb8-9a1d-bbde8f81d0f6
+ name: alice
+ password: alice




** Create a book
Using cookies from browser (logged in as user who is a ROLE_Librarian)

#+begin_src json
POST http://localhost:8080/book

{
  "title": "Book 1",
  "author": "Woland"
}

#+end_src

Should return

#+begin_src
{
"id": "ff8081816fa893c8016fa8958c390000",
"title": "Book 1",
"author": "Woland",
"protectionId": "774ac2d5-7ec5-4b4a-a7c5-d7c8e9245406"
}
#+end_src

Remember =protectionId=.

** Share a book with user
Suppose keycloak is at localhost:8180, this app is at localhost:8080

1. Login to Keycloak as user who created a book
#+begin_src shell
curl --request POST \
  --url http://localhost:8180/auth/realms/demo/protocol/openid-connect/token \
  --header 'content-type: application/x-www-form-urlencoded' \
  --data client_id=library \
  --data client_secret=58bd0270-992e-4f8e-ad24-67930d8b0cc0 \
  --data username=librarian \
  --data password=lib \
  --data grant_type=password
#+end_src

Remember ="access_token"=

Share using =protectionId=:

#+begin_src shell
curl --request POST \
  --url http://localhost:8180/auth/realms/demo/authz/protection/permission/ticket \
  --header 'authorization: Bearer $access_token' \
  --header 'content-type: application/json' \
  --data '{
"resource": "$resource_id"
"requester": "$user_id_with_whom_to_share",
"granted": true,
"scopeName": "book:read"
}'
#+end_src


The book should apper in book list for the said user.


* My TODO list

https://www.keycloak.org/docs/latest/authorization_services/ Read it and try to use permission ticket.

** Step 1. Tutorial

I started with this [[https://www.thomasvitale.com/spring-security-keycloak/][tutorial]].

It gives us a basic understanding of Spring Security RBAC with two roles: ~Member~ and ~Librarian~.


** DONE Step 2. RBAC -> ACL

Follow disussion at:

https://lists.jboss.org/pipermail/keycloak-user/2018-October/015882.html

And implement new id-based roles for books

Clone https://github.com/keycloak/keycloak-quickstarts/tree/latest/app-authz-uma-photoz as inspiration

** DONE Step 3. Permanent Books

Replace a datasource for books with a database.

Use UMA. Use PhotoZ


** TODO Step 4. Stress Test

Make a stress test for this thing. Possibly compare with casbin implementation if it will be there.
